name: Terraform Validate, Lint & Scan

on:
    push:
        branches:
            - main
            - staging
    pull_request:
        branches:
            - main
            - staging

permissions:
    id-token: write # Nécessaire pour l'authentification OIDC AWS
    contents: read # Nécessaire pour actions/checkout
    pull-requests: write # Optionnel: pour poster des commentaires sur les PR (vu plus tard)

jobs:
    validate-code:
        name: Validate Terraform Code
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::848955332034:role/githubAction-terraform-project-lab-1 # !!  REMPLACEZ par l'ARN de votre rôle !!
                  aws-region: eu-central-1

            # Décommentez et adaptez la section pour OpenTofu si vous l'utilisez
            # - name: Setup OpenTofu
            #   uses: opentofu/setup-opentofu@v1
            #   with:
            #     tofu_version: '1.7.0' # Spécifiez la version d'OpenTofu
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: "1.12.1" # Spécifiez la version de Terraform que vous souhaitez utiliser

              # Si vous utilisez OpenTofu, remplacez 'terraform' par 'tofu' dans les commandes ci-dessous
            - name: Terraform Init (Validation Mode)
              id: init
              run: terraform init -backend=false -input=false
              # Pour la validation pure, backend=false est suffisant.
              # Pour un 'plan' plus tard, nous aurons besoin d'initialiser le backend.

            - name: Terraform Format Check
              id: fmt
              run: terraform fmt -check -recursive -diff

            - name: Terraform Validate
              id: validate
              run: terraform validate

            # TFLint (Linter)
            - name: Setup TFLint
              uses: terraform-linters/setup-tflint@v4
              with:
                  tflint_version: v0.58.0 # Spécifiez la version de TFLint que vous souhaitez utiliser

            - name: Init TFLint
              run: tflint --init
              # Assurez-vous d'avoir un fichier .tflint.hcl configuré à la racine de votre projet
              # avec au moins le plugin AWS activé, comme vu précédemment.

            - name: Run TFLint
              run: tflint --recursive

            # Trivy (Security Scan)
            - name: Run Trivy IaC scan
              uses: aquasecurity/trivy-action@0.30.0
              with:
                  scan-type: "config"
                  input: "."
                  format: "table"
                  exit-code: "0" # ne pas échouer le job si des vulnérabilités sont trouvées
                  severity: "CRITICAL"
                  ignore-unfixed: true
